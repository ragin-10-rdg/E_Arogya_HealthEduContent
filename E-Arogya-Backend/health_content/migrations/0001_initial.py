# Generated by Django 4.2.7 on 2025-08-09 16:11

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HealthCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Icon name for frontend display', max_length=50)),
                ('color', models.CharField(default='#4CAF50', help_text='Hex color code for category', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Health Category',
                'verbose_name_plural': 'Health Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MediaContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True)),
                ('description', models.TextField()),
                ('content_type', models.CharField(choices=[('video', 'Video'), ('article', 'Article'), ('pdf', 'PDF Document'), ('audio', 'Audio'), ('infographic', 'Infographic'), ('interactive', 'Interactive Content')], max_length=20)),
                ('url', models.URLField(help_text='Main content URL', validators=[django.core.validators.URLValidator()])),
                ('thumbnail_url', models.URLField(blank=True, help_text='Thumbnail/preview image URL')),
                ('embed_code', models.TextField(blank=True, help_text='HTML embed code if applicable')),
                ('author', models.CharField(blank=True, max_length=100)),
                ('source', models.CharField(blank=True, help_text='Source organization/website', max_length=100)),
                ('duration', models.CharField(blank=True, help_text='Duration for videos/audio', max_length=20)),
                ('language', models.CharField(default='en', help_text='Content language code', max_length=10)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('all', 'All Levels')], default='all', max_length=20)),
                ('target_age_group', models.CharField(choices=[('children', 'Children (0-12)'), ('teens', 'Teens (13-17)'), ('adults', 'Adults (18-64)'), ('seniors', 'Seniors (65+)'), ('all_ages', 'All Ages')], default='all_ages', max_length=20)),
                ('is_featured', models.BooleanField(default=False, help_text='Show on homepage/featured sections')),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Content verified by medical professionals')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('like_count', models.PositiveIntegerField(default=0)),
                ('share_count', models.PositiveIntegerField(default=0)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('published_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_content', to='health_content.healthcategory')),
            ],
            options={
                'verbose_name': 'Media Content',
                'verbose_name_plural': 'Media Content',
                'ordering': ['-published_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContentView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_ip', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='health_content.mediacontent')),
            ],
            options={
                'verbose_name': 'Content View',
                'verbose_name_plural': 'Content Views',
            },
        ),
        migrations.CreateModel(
            name='ContentRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_ip', models.GenericIPAddressField()),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='health_content.mediacontent')),
            ],
            options={
                'verbose_name': 'Content Rating',
                'verbose_name_plural': 'Content Ratings',
            },
        ),
        migrations.AddIndex(
            model_name='mediacontent',
            index=models.Index(fields=['category', 'is_active'], name='health_cont_categor_257b18_idx'),
        ),
        migrations.AddIndex(
            model_name='mediacontent',
            index=models.Index(fields=['content_type', 'is_active'], name='health_cont_content_c66902_idx'),
        ),
        migrations.AddIndex(
            model_name='mediacontent',
            index=models.Index(fields=['is_featured', 'is_active'], name='health_cont_is_feat_945629_idx'),
        ),
        migrations.AddIndex(
            model_name='contentview',
            index=models.Index(fields=['content', 'viewed_at'], name='health_cont_content_7c1db4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contentrating',
            unique_together={('content', 'user_ip')},
        ),
    ]
